{"uid":"963aa721ee867de4","name":"test_edit_article","fullName":"test_conduit.TestConduit#test_edit_article","historyId":"fd6799af0904d95b55a0de2ae85fd327","time":{"start":1681224936971,"stop":1681224941654,"duration":4683},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f7a71414c70>\n\n    def test_edit_article(self):\n        self.login()\n        username_nav = self.browser.find_element(By.XPATH, '//li/a[contains(text(), \"' + user_name + '\")]')\n        username_nav.click()\n        WebDriverWait(self.browser, 3).until(EC.url_to_be('http://localhost:1667/#/@' + user_name + '/'))\n        WebDriverWait(self.browser, 3).until(EC.presence_of_element_located((By.CSS_SELECTOR, '.preview-link')))\n        article_link = self.browser.find_element(By.CSS_SELECTOR, '.preview-link')\n        article_link.click()\n        WebDriverWait(self.browser, 3).until(EC.url_matches('http://localhost:1667/#/articles'))\n        edit_btn = self.browser.find_element(By.CSS_SELECTOR, '.btn-outline-secondary')\n        WebDriverWait(self.browser, 3).until(EC.visibility_of(edit_btn))\n        edit_btn.click()\n>       WebDriverWait(self.browser, 3).until(EC.url_matches('http://localhost:1667/#/editor'))\n\ntest_conduit.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"091eb070bdfb721dc777a0997f302fab\")>\nmethod = <function url_matches.<locals>._predicate at 0x7f7a706567a0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681224935792,"stop":1681224936970,"duration":1178},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681224941698,"stop":1681224941754,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az448-390"},{"name":"thread","value":"3049-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"963aa721ee867de4.json","parameterValues":[]}