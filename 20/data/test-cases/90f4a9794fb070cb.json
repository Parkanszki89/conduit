{"uid":"90f4a9794fb070cb","name":"test_edit_article","fullName":"test_conduit.TestConduit#test_edit_article","historyId":"fd6799af0904d95b55a0de2ae85fd327","time":{"start":1681554384195,"stop":1681554391291,"duration":7096},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f39e1cccc70>\n\n    def test_edit_article(self):\n        self.create_article('test-edit', 'test-edit about', 'this is a test article', ['edit'])\n        WebDriverWait(self.browser, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, '.ion-edit')))\n    \n        edit_btn = self.browser.find_element(By.CSS_SELECTOR, '.ion-edit')\n        edit_btn.click()\n        WebDriverWait(self.browser, 5).until(EC.url_matches('http://localhost:1667/#/editor'))\n        article_text = self.browser.find_element(By.XPATH, '//textarea[@placeholder=\"Write your article (in markdown)\"]')\n        article_text.send_keys(' which was modified')\n        publish_btn = self.browser.find_element(By.XPATH, '//button[@type=\"submit\"]')\n        publish_btn.click()\n>       WebDriverWait(self.browser, 5).until(EC.url_to_be('http://localhost:1667/#/articles/test-edit'))\n\ntest_conduit.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"483f9937da03d3f60bcad20f31d408f1\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7f39e0f5dbd0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681554383269,"stop":1681554384194,"duration":925},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681554391333,"stop":1681554391388,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az621-133"},{"name":"thread","value":"3032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"90f4a9794fb070cb.json","parameterValues":[]}