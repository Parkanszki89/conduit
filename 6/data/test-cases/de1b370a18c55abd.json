{"uid":"de1b370a18c55abd","name":"test_register","fullName":"test_conduit.TestConduit#test_register","historyId":"8ba97f65f84edc4c5922790620e093e6","time":{"start":1681061656845,"stop":1681061659652,"duration":2807},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"4b8aa15202b34f1b26151ff10493c329\", element=\"f88da0af-7b89-43b8-8943-81fab252914b\")>])","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5dc8a189a0>\n\n    def test_register(self):\n        register_link = self.browser.find_element(By.XPATH, '//a[@href=\"#/register\"]')\n        register_link.click()\n    \n        username_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Username\"]')\n        email_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Email\"]')\n        password_input = self.browser.find_element(By.XPATH, '//input[@type=\"password\"]')\n        sign_up_btn = self.browser.find_element(By.XPATH, '//button[contains(text(), \"Sign up\")]')\n    \n        username_input.send_keys('test42')\n        email_input.send_keys('test42@freemail.hu')\n        password_input.send_keys('1234Abc!')\n    \n        sign_up_btn.click()\n    \n        WebDriverWait(self.browser, 3).until(EC.url_to_be('http://localhost:1667/#/'))\n    \n        modal_icon = self.browser.find_element(By.CSS_SELECTOR, '.swal-modal > .swal-icon--success')\n        assert modal_icon.is_displayed()\n    \n        ok_btn = self.browser.find_element(By.CSS_SELECTOR, '.swal-modal button.swal-button--confirm')\n        ok_btn.click()\n    \n        modal = self.browser.find_elements(By.CSS_SELECTOR, '.swal-modal')\n>       assert len(modal) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"4b8aa15202b34f1b26151ff10493c329\", element=\"f88da0af-7b89-43b8-8943-81fab252914b\")>])\n\ntest_conduit.py:65: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681061655680,"stop":1681061656844,"duration":1164},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681061659698,"stop":1681061659755,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az256-523"},{"name":"thread","value":"3058-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"de1b370a18c55abd.json","parameterValues":[]}